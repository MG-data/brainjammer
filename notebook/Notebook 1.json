{
	"name": "Notebook 1",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "SparkPool",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "c6e85ad5-125d-4ab0-a193-4eed308f9105"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/612492b7-fc72-4f78-a627-fccbfbbc32de/resourceGroups/csharpguitar/providers/Microsoft.Synapse/workspaces/azsynapseanalytics/bigDataPools/SparkPool",
				"name": "SparkPool",
				"type": "Spark",
				"endpoint": "https://azsynapseanalytics.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/SparkPool",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.4",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "python"
					},
					"collapsed": false
				},
				"source": [
					"%%pyspark\r\n",
					"df = spark.read.option(\"header\",\"true\") \\\r\n",
					"  .csv('abfss://brainjammer@csharpguitarpublic.dfs.core.windows.net/EMEA/brainjammer/in/2022/04/01/18/*')\r\n",
					"display(df.limit(10))\r\n",
					""
				],
				"execution_count": 1
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "python"
					}
				},
				"source": [
					"%%pyspark\r\n",
					"df = spark.read.option(\"header\",\"true\") \\\r\n",
					"  .csv('abfss://brainjammer@csharpguitarpublic.dfs.core.windows.net/EMEA/brainjammer/in/2022/04/01/18/*')\r\n",
					"headers = spark.createDataFrame([(\"Timestamp\", \"Timestamp\"), \r\n",
					"  (\"AF3theta\", \"AF3/theta\"), (\"AF3alpha\", \"AF3/alpha\"), (\"AF3betaL\", \"AF3/betaL\"),\r\n",
					"  (\"AF3betaH\", \"AF3/betaH\"), (\"AF3gamma\", \"AF3/gamma\"), (\"T7theta\", \"T7/theta\"), \r\n",
					"  (\"T7alpha\", \"T7/alpha\"), (\"T7betaL\", \"T7/betaL\"), (\"T7betaH\", \"T7/betaH\"), \r\n",
					"  (\"T7gamma\", \"T7/gamma\"), (\"Pztheta\", \"Pz/theta\"), (\"Pzalpha\", \"Pz/alpha\"), \r\n",
					"  (\"PzbetaL\", \"Pz/betaL\"), (\"PzbetaH\", \"Pz/betaH\"), (\"Pzgamma\", \"Pz/gamma\"), \r\n",
					"  (\"T8theta\", \"T8/theta\"), (\"T8alpha\", \"T8/alpha\"), (\"T8betaL\", \"T8/betaL\"), \r\n",
					"  (\"T8betaH\", \"T8/betaH\"), (\"T8gamma\", \"T8/gamma\"), (\"AF4theta\", \"AF4/theta\"), \r\n",
					"  (\"AF4alpha\", \"AF4/alpha\"), (\"AF4betaL\", \"AF4/betaL\"), (\"AF4betaH\", \"AF4/betaH\"), \r\n",
					"  (\"AF4gamma\", \"AF4/gamma\")],['newHeader','oldHeader'])\r\n",
					"newHeaders = headers.select('newHeader').rdd.flatMap(lambda x: x).collect()\r\n",
					"dfh = df.toDF(*newHeaders)\r\n",
					"dfh.write.mode(\"overwrite\").parquet('/EMEA/brainjammer/out/2022/04/03/17/sampleBrainwaves.parquet')"
				],
				"execution_count": 2
			}
		]
	}
}