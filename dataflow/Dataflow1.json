{
	"name": "Dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "sampleBrainwavesParquet",
						"type": "DatasetReference"
					},
					"name": "Brainwaves"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "EpochConversion"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Timestamp as string,",
				"          AF3theta as string,",
				"          AF3alpha as string,",
				"          AF3betaL as string,",
				"          AF3betaH as string,",
				"          AF3gamma as string,",
				"          T7theta as string,",
				"          T7alpha as string,",
				"          T7betaL as string,",
				"          T7betaH as string,",
				"          T7gamma as string,",
				"          Pztheta as string,",
				"          Pzalpha as string,",
				"          PzbetaL as string,",
				"          PzbetaH as string,",
				"          Pzgamma as string,",
				"          T8theta as string,",
				"          T8alpha as string,",
				"          T8betaL as string,",
				"          T8betaH as string,",
				"          T8gamma as string,",
				"          AF4theta as string,",
				"          AF4alpha as string,",
				"          AF4betaL as string,",
				"          AF4betaH as string,",
				"          AF4gamma as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> Brainwaves",
				"Brainwaves derive(ReadingTimestamp = toTimestamp(toLong(toDecimal(Timestamp, 14, 4) * (1000l)))) ~> EpochConversion"
			]
		}
	}
}